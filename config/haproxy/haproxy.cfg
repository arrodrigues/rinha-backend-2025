# haproxy.cfg
frontend http
    bind *:9999
    mode http
    timeout client 10s
    use_backend all

backend all
    mode http
    server s1 api01:8080
    server s2 api02:8080
    timeout connect 1s
    timeout server 1s

frontend payment-processor
    bind *:9991
    mode http
    timeout client 10s
    use_backend payment_gateway_circuit_breaker

backend payment_gateway_circuit_breaker
  mode http
  stick-table type string  size 1  expire 30s  store http_req_rate(10s),gpc0,gpc0_rate(10s),gpc1

  # Is the circuit open (no traffic can flow)?
  acl circuit_open be_name,table_gpc1 gt 0

  # Reject request if circuit is open
  http-request deny deny_status 503 if circuit_open

  # Begin tracking requests
  http-request track-sc0 be_name

  # Count HTTP 5xx server errors
  http-response sc-inc-gpc0(0) if { status ge 500 }

  # Store the HTTP request rate and error rate in variables
  http-response set-var(res.req_rate) sc_http_req_rate(0)
  http-response set-var(res.err_rate) sc_gpc0_rate(0)

  # Check if error rate is greater than 50% using some math
  http-response sc-inc-gpc1(0) if { int(100),mul(res.err_rate),div(res.req_rate) gt 50 }

  server sp1 payment-processor-default:8080 check
  server sp2 payment-processor-fallback:8080 check

  timeout connect 1s
  timeout server 1s



# Optional monitoring tool
frontend stats
  mode http
  bind *:8404
  stats enable
  stats refresh 10s
  stats uri /stats
  stats show-modules
